services:
  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - "8080:8080"
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_PROFILES_ACTIVE: test
    depends_on:
      - rabbitmq
    networks:
      - app-network

  stock-service:
    build:
      context: ./stock-service
    container_name: stock-service
    ports:
      - "8081:8081"
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_PROFILES_ACTIVE: test
    depends_on:
      - rabbitmq
    networks:
      - app-network

  zap:
    image: zaproxy/zap-stable
    networks:
      - app-network
    command: >
      bash -c "
        zap-baseline.py -t http://order-service:8080 -r /zap/wrk/zap-report-order.html -d &&
        zap-baseline.py -t http://stock-service:8081 -r /zap/wrk/zap-report-stock.html -d
      "
    volumes:
      - ./zap-reports:/zap/wrk
    depends_on:
      - order-service
      - stock-service


networks:
  app-network:
    driver: bridge